flatpak:
    id: @ID_PREFIX@.Sdk
    build-runtime: true
    name: @RELEASE@/flatpak-sdk
    component: flatpak-sdk
    branch: @RELEASE@
    runtime: @ID_PREFIX@.Platform
    add-extensions:
        @ID_PREFIX@.Platform.GL:
            directory: lib64/GL
            versions: @RELEASE@;1.4
            add-ld-path: lib
            merge-dirs: egl/egl_external_platform.d;glvnd/egl_vendor.d;lib/clc;lib/dri;lib/gbm;OpenCL/vendors;vdpau;vulkan/explicit_layer.d;vulkan/icd.d;vulkan/implicit_layer.d
            subdirectories: true
            autodelete: false
            no-autodownload: true
            download-if: active-gl-driver
            enable-if: active-gl-driver
            autoprune-unless: active-gl-driver
        org.freedesktop.Platform.GL:
            directory: lib64/GL
            version: '1.4'
            add-ld-path: lib
            merge-dirs: egl/egl_external_platform.d;glvnd/egl_vendor.d;lib/gbm;OpenCL/vendors;vulkan/icd.d;vulkan/implicit_layer.d
            subdirectories: true
            autodelete: false
            no-autodownload: true
            enable-if: active-gl-driver
        @ID_PREFIX@.Platform.VAAPI.Intel:
            directory: lib64/dri-intel-vaapi
            add-ld-path: lib
            autodelete: false
            no-autodownload: true
            download-if: have-intel-gpu
            autoprune-unless: have-intel-gpu
        @ID_PREFIX@.Platform.VAAPI.nvidia:
            directory: lib64/dri-nvidia-vaapi
            autodelete: false
            no-autodownload: true
            download-if: have-kernel-module-nvidia
            autoprune-unless: have-kernel-module-nvidia
        @ID_PREFIX@.Platform.VulkanLayer:
            directory: lib64/vulkan
            add-ld-path: lib
            merge-dirs: share/vulkan/implicit_layer.d;share/vulkan/explicit_layer.d;
            subdirectories: true
            no-autodownload: true
        @ID_PREFIX@.Platform.Locale:
            directory: share/runtime/locale
            autodelete: true
        @ID_PREFIX@.Platform.Codecs:
            directory: lib64/codecs
            add-ld-path: lib
            merge-dirs: bin;lib/dri;lib/gstreamer-1.0;lib/libheif;share/gstreamer-1.0/presets
            subdirectories: true
            no-autodownload: true
        @ID_PREFIX@.Platform.tessdata:
            directory: share/tesseract/tessdata
            no-autodownload: true
        @ID_PREFIX@.Gtk3theme:
            directory: share/runtime/share/themes
            version: '3.22'
            subdirectories: true
            subdirectory-suffix: gtk-3.0
            no-autodownload: true
            download-if: active-gtk-theme
        @ID_PREFIX@.Sdk.Extension:
            directory: lib/sdk
            add-ld-path: lib
            subdirectories: true
            no-autodownload: true
    finish-args: >
        --env=ALSA_CONFIG_DIR=/usr/share/alsa
        --env=ALSA_CONFIG_PATH=/usr/share/alsa/alsa.conf
        --env=GI_TYPELIB_PATH=/app/lib64/girepository-1.0
        --env=GST_PLUGIN_SYSTEM_PATH=/app/lib64/gstreamer-1.0:/usr/lib64/codecs/lib/gstreamer-1.0:/usr/lib64/gstreamer-1.0
        --env=GST_PRESET_PATH=/usr/lib64/codecs/share/gstreamer-1.0/presets
        --env=LIBHEIF_PLUGIN_PATH=/usr/lib64/codecs/lib/libheif:/usr/lib64/libheif
        --env=LIBVA_DRIVERS_PATH=/usr/lib64/codecs/lib/dri:/usr/lib64/dri-intel-vaapi:/usr/lib64/dri-nvidia-vaapi:/usr/lib64/GL/lib/dri
        --env=LUA_PATH="/app/share/lua/5.4/?.lua;/app/share/lua/5.4/?/init.lua;/app/lib64/lua/5.4/?.lua;/app/lib64/lua/5.4/?/init.lua;;"
        --env=LUA_CPATH="/app/lib64/lua/5.4/?.so;;"
        --env=PATH=/app/bin:/app/sbin:/usr/lib64/codecs/bin:/usr/bin
        --env=PINENTRY_BINARY=/usr/bin/pinentry-gnome3
        --env=PYTHONUSERBASE=/var/data/python
        --env=TCLLIBPATH=/app/lib64/tcl9.0
        --env=XDG_DATA_DIRS=/app/share:/usr/share:/usr/share/runtime/share:/run/host/user-share:/run/host/share
        --env=GPROFNG_SYSCONFDIR=/etc

    # For applications, appstream-compose is run automatically along with other processing
    # of the tree. For runtimes, we have to run it manually. flatpak-container-tools local
    # builds have issues if the cleanup script outputs to stdout, hence the 1>&2
    # redirection.
    cleanup-commands: |
        appstream-compose --verbose   \
            --prefix=/usr             \
            --basename=@ID_PREFIX@.Sdk \
            --origin=flatpak          \
            @ID_PREFIX@.Sdk 1>&2

        mv -f /usr/bin/flatpak-xdg-email /usr/bin/xdg-email
        mv -f /usr/bin/flatpak-xdg-open /usr/bin/xdg-open

        rm -fr /usr/lib/systemd/
        rm -fr /usr/share/{doc,info,man}

        # SSH error: Bad owner or permissions on /etc/ssh/ssh_config.d/50-redhat.conf
        rm -f /etc/ssh/ssh_config.d/*

        # enable dynamic ld.so.cache generation
        [ -e /usr/bin/ldconfig ] || ln -s ../sbin/ldconfig /usr/bin/ldconfig
        cat /etc/ld.so.conf.d/*.conf > /etc/ld.so.conf
        rm -f /etc/ld.so.conf.d/*.conf

        # User ALSA configuration can conflict with flatpak setup
        # https://gitlab.com/freedesktop-sdk/freedesktop-sdk/-/issues/857
        sed -e '/~\/\.asoundrc/d' -e 's|/alsa/asoundrc|/asound.conf|' /usr/share/alsa/alsa.conf

        # Create symlinks to expected locations from GL extensions
        rm -fr /etc/{egl,glvnd,OpenCL,vulkan}
        rm -fr /usr/lib64/{clc,dri,gbm,vdpau}/
        ln -s ../lib64/GL/{egl,glvnd,OpenCL,vulkan} /etc/
        ln -s GL/lib/{clc,dri,gbm} GL/vdpau /usr/lib64/
        # Provide driver implementations with GL extensions
        rm -f /usr/lib64/libdrm_*.so*

        # Rely on GL.default extension for llvm/clang (for doxygen, perf)
        rm -fr /usr/lib64/LLVMgold.so* /usr/lib64/lib{LLVM,LTO,Remarks,clang}* \
               /usr/lib64/bfd-plugins/LLVMgold.so* /usr/lib64/llvm*/ /usr/lib/clang/

        # Create symlinks to expected locations from Vulkan extensions
        rm -fr /usr/share/vulkan
        ln -s ../lib64/vulkan/share/vulkan /usr/share/vulkan

        # Create symlinks to expected locations from VAAPI.Intel extension
        if [ $(arch) = x86_64 ]; then
           ln -s dri-intel-vaapi/lib/{libmfx-gen,mfx} /usr/lib64/
           ln -s ../lib64/dri-intel-vaapi/share/mfx /usr/share/
        fi

        # Prepare mountpoint for tessdata extension
        rm -fr /usr/share/tesseract/tessdata/*

        touch -d @0 /usr/share/fonts /usr/share/fonts/*
        fc-cache -rs

        cd /usr/lib/locale
        for d in *; do
            l=`echo $d | sed -e 's/\([^-_\.]*\)[-_\.].*/\1/'`
            case $l in C|en) continue ;; esac
            find $d -delete
            ln -sf ../../share/runtime/locale/$l/lib/$d .
        done

        cd /usr/share/hunspell
        for f in *; do
            l=`echo $f | sed -e 's/\([^-_\.]*\)[-_\.].*/\1/'`
            case $l in en) continue ;; esac
            rm -f $f
            ln -sf ../runtime/locale/$l/hunspell/$f .
        done
        cd /usr/share/hyphen
        for f in *; do
            l=`echo $f | sed -e 's/hyph_\([^-_\.]*\)[-_\.].*/\1/'`
            case $l in en) continue ;; esac
            rm -f $f
            ln -sf ../runtime/locale/$l/hyphen/$f .
        done
        cd /usr/share/mythes
        mv th_eo{,_v2}.dat
        mv th_eo{,_v2}.idx
        for f in *; do
            l=`echo $f | sed -e 's/th_\([^-_\.]*\)[-_\.].*/\1/'`
            case $l in en) continue ;; esac
            rm -f $f
            ln -sf ../runtime/locale/$l/mythes/$f .
        done
        cd /usr/share/qt6/translations
        for f in *.qm; do
            l=`echo $f | sed -e 's/[^-_\.]*_\([^-_\.]*\)[-_\.].*/\1/'`
            case $l in en) continue ;; esac
            rm -f $f
            ln -sf ../../runtime/locale/$l/qt6/$f .
        done

    packages: []
